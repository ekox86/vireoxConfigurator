<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VireoxConfigurator">
    <ImageSource x:Key="cancella">/VireoxConfigurator;Component/img/cancella.png</ImageSource>
    <ImageSource x:Key="saveproperties">/VireoxConfigurator;Component/img/saveproperties.png</ImageSource>
    <Style TargetType="TreeViewItem"  x:Key="tviStyle" x:Shared="False">
        <Setter Property="local:MyAttached.InputBindings">
            <Setter.Value>
                <InputBindingCollection>
                    <KeyBinding Key="C"  Modifiers="Ctrl" Command="ApplicationCommands.Copy"/>
                    <KeyBinding Key="X"  Modifiers="Ctrl" Command="ApplicationCommands.Cut"/>
                    <KeyBinding Key="V"  Modifiers="Ctrl" Command="ApplicationCommands.Paste"/>
                </InputBindingCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tBoxTree" TargetType="TextBox">
        <Setter Property="Text" Value="{Binding Name}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0,0,3,0"/>
        <!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="Margin" Value="0"/>
        <!--<Setter Property="FontSize" Value="10"/>-->        
    </Style>
    <Style x:Key="SelectableTextBlockLikeStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="-2,0,0,0"/>
        <!-- The Padding -2,0,0,0 is required because the TextBox
        seems to have an inherent "Padding" of about 2 pixels.
        Without the Padding property,
        the text seems to be 2 pixels to the left
        compared to a TextBlock
    -->
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <TextBlock Text="{TemplateBinding Text}" 
                             FontSize="{TemplateBinding FontSize}"
                             FontStyle="{TemplateBinding FontStyle}"
                             FontFamily="{TemplateBinding FontFamily}"
                             FontWeight="{TemplateBinding FontWeight}"
                             TextWrapping="{TemplateBinding TextWrapping}"
                             Foreground="{DynamicResource NormalText}"
                             Padding="0,0,0,0"
                                       />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="treeImg" TargetType="Image">
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15"/>
        <Setter Property="Margin" Value="2"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Enabled}" Value="False">
                <Setter Property="Opacity" Value="0.30"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Label" x:Key="popupTitle">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>
    <Style x:Key="textNode" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding Name}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Enabled}" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ComboBox" x:Key="gridCbox" >
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="ItemsSource" Value="{Binding Options}"/>
        <Setter Property="Text" Value="{Binding Value, UpdateSourceTrigger=Explicit}"/>
    </Style>
    <Style TargetType="DataGrid" x:Key="dGrid">
        <Setter Property="RowHeight" Value="25"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="ItemsSource" Value="{Binding propertylist}"/>
        <Setter Property="AreRowDetailsFrozen" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>    
        <Setter Property="Margin" Value="0,5,0,0"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="cellLabel">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Text" Value="{Binding Name}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="cellName" >
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Text" Value="{Binding Name}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Common}" Value="False">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox" x:Key="checkBoxCell">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="IsChecked" Value="{Binding Value, UpdateSourceTrigger=Explicit}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="comboBoxCell">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="ItemsSource" Value="{Binding Options}"/>
        <Setter Property="Text" Value="{Binding Value, UpdateSourceTrigger=Explicit}"/>
    </Style>
    <Style TargetType="TextBox" x:Key="textBoxCell">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Text" Value="{Binding Value, UpdateSourceTrigger=Explicit}"/>
    </Style>
    <Style TargetType="Border" x:Key="popupBorder">
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFF0F0F0"/>
    </Style>
    <Style TargetType="Popup" x:Key="popupStyle">
        <Setter Property="Placement" Value="Center"/>
        <Setter Property="PlacementTarget" Value="{Binding ElementName=window}"/>
        <Setter Property="PopupAnimation" Value="Fade"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Width" Value="250"/>
    </Style>
    <Style TargetType="Grid" x:Key="PopupGrid">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Background" Value="#FFF0F0F0"/>
    </Style>
    <Style TargetType="MenuItem" x:Key="menuStyle">
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style TargetType="Button" x:Key="saveGridButton">
        <!--<Setter Property="Width" Value="76"/>
        <Setter Property="Height" Value="20"/>-->
        <Setter Property="Margin" Value="4,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource saveproperties}" Margin="0,0,3,0"/>
                    <TextBlock>Salva</TextBlock>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="cancelGridButton" BasedOn="{StaticResource saveGridButton}">
        <!--<Setter Property="Width" Value="76"/>
        <Setter Property="Height" Value="20"/>-->
        <Setter Property="Margin" Value="4,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource cancella}" Margin="0,0,3,0"/>
                    <TextBlock>Annulla</TextBlock>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="protocolCbox">
        <Setter Property="HorizontalAlignment" Value="Left"/>        
        <Setter Property="DataContext" Value="{Binding ViewNode}"/>
        <Setter Property="ItemsSource" Value="{Binding GroupViewList}"/>
        <Setter Property="SelectedItem" Value="{Binding First}"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>        
        <Setter Property="HorizontalContentAlignment" Value="Left"/>        
    </Style>
    <Style TargetType="Label" x:Key="gridTitleLabel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="1,1,0,0"/>
        <Setter Property="FontSize" Value="15.333"/>
        <Setter Property="FontWeight" Value="Medium"/>
        

    </Style>
</ResourceDictionary>